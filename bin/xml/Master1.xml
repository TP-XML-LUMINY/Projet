<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="../xsl/master.xsl" type="text/xsl" media="screen"?>
<!DOCTYPE masterInfo SYSTEM "./dtd/master.dtd">

<master>
	<parcours annee="M1">
		<presentation>
			<refprof id="remi.morin"/>
			<lieu>
				<campus>Luminy</campus>
				<campus>Saint-Jérôme</campus>
			</lieu>
			<description>
				<paragraphe>L'objectif de cette première année est de donner les bases indispensables permettant, en deuxième année, de choisir une spécialisation dans un domaine précis. Sur les 60 crédits de cette première année, 15 crédits correspondent à des enseignants optionnels. Ces options permettent de construire un parcours adapté. Un choix entre stage ou projet encadré est également proposé au semestre de printemps.</paragraphe>
			</description>
		</presentation>
		<competences>
			<paragraphe>Maîtriser les notions fondamentales de l'informatique : principes de fonctionnement des machines, concepts d'organisation des données et algorithmique avancée, notions de réseaux et de systèmes, traduction et langages, information et systèmes distribués, méthodes de conception.</paragraphe>
		</competences>
		<programme semestre="1">
			<paquet_unites>
				<nom>Unités obligatoires :</nom>
				<unite id="ENSINAU1">
					<nom>Génie Logiciel</nom>
					<credit>6</credit>
					<refprof id="arrighi"/>
					<refprof id="Kevin"/>
				</unite>
				<unite id="ENSINAU2">
					<nom>Complexité</nom>
					<credit>6</credit>
					<refprof id="Nadia"/>
					<refprof id="Frederic"/>
					<resumes>
						<liste>
							<el>Processus logiciel</el>
							<el>Rappels sur les notions d'analyse de la complexité des algorithmes et des problèmes.</el>
							<el>Notion de problèmes (décision, recherche, dénombrement, énumération, optimisation). Bornes inférieures de complexité.</el>
							<el>Classes P et NP. Problèmes NP-complets.</el>
							<el>Méthodes de résolution des problèmes NP-Complets.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>40</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>20</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>20</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINAU3">
					<nom>Réseaux</nom>
					<credit>6</credit>
					<refprof id="Emmanuel"/>
					<resumes>
						<liste>
							<el>Architecture en couches, standard OSI</el>
							<el>Couche physique</el>
							<el>Couche liaison de Données</el>
							<el>Réseau IP</el>
							<el> de routage, routage IP</el>
							<el>Protocole TCP/IP</el>
							<el>Couche Application : HTTP, SMTP, FTP, ...</el>
							<el>Bases des protocoles cryptographiques (terminologie, architecture à clef publique).</el>
							<el>Introduction à la Sécurité des réseaux.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>20</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>20</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>20</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINAU4">
					<nom>Programmation fonctionnelle</nom>
					<credit>3</credit>
					<refprof id="Luigi"/>
					<refprof id="Naves"/>
					<resumes>
						<liste type="ol">
							<el>Introduction à la programmation fonctionnelle, sur l'exemple du langage OCaml Expressions, évaluation, types de base. Polymorphisme, ordre supérieur. Fonctions récursives, filtrage. Les diverses stratégies d'évaluation, application à la programmation d'un opérateur de point fixe.</el>
							<el>Les types Sommes, types récursifs, polymorphes. Arbres. Filtrage.</el>
							<el>Sémantique opérationnelle Liaisons, environnements, clôtures. Évaluation des fonctions récursives .</el>
							<el>Aspects impératifs Exceptions, entrées-sorties, séquencement, fichiers, références, tableaux, enregistrements.</el>
							<el>Implantation du filtrage en OCaml Termes formels, substitutions, filtrage.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINAU5">
					<nom>Programmation parallèle</nom>
					<credit>3</credit>
					<refprof id="Rémi"/>
					<resumes>
						<liste>
							<el>Ma position est que dans programmation parallèle, on fait de la programmation multithread en JAVA, en tâchant d'être rigoureux : présentation des problèmes et des solutions algorithmiques ; classes utiles ; construction de classe threadsafe ; détail de modèle mémoire</el>
							<el>Java et garantie DRF.</el>
							<el>Cette année j'ai ajouté vérification formelle d'algorithmes parallèles (ou distribués).</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
			</paquet_unites>
			<paquet_unites>
				<nom>6 crédits à choisir :</nom>
				<unite id="ENSINAU6">
					<nom>Programmation logique</nom>
					<credit>3</credit>
					<refprof id="Stefanini"/>
					<resumes>
						<liste>
							<el>Introduction. Forme générale des règles. Effacement, unification, backtracking. Contrôle de l'exécution.</el>
							<el>Listes, arbres et n-uplets. Liste représentée par différence de listes. Ajout en tête et en queue, concaténation.</el>
							<el>Analyseurs syntaxiques. Construction d'un arbre syntaxique. Liste des feuilles d'un arbre. Freeze et analyse par feuille.</el>
							<el>Règles prédéfinies.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINAU7">
					<nom>Outils de l'internet</nom>
					<credit>3</credit>
					<refprof id="Magali"/>
					<resumes>
						<liste>
							<el>Présentation d'Internet.</el>
							<el>Les langages et les normes sur Internet.</el>
							<el>Les protocoles : HTTP, HTTP, SMTP, IMAP, POP3.</el>
							<el>Les applications web.</el>
							<el>Sécurité.</el>
							<el>Les nouvelles et futures technologies.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINAU8">
					<nom>Système embarqué</nom>
					<credit>3</credit>
					<refprof id="Magali"/>
					<resumes>
						<liste>
							<el>nous sommes désolé, mais nous n'avons pas encore de résumé.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINAU9">
					<nom>Fondamentaux pour l'ingénierie des langues</nom>
					<credit>3</credit>
					<refprof id="Frederic_b"/>
					<resumes>
						<liste>
							<el>Rappel de théorie des langages.</el>
							<el>Algorithmes d'analyse syntaxique pour grammaires ambiguës.</el>
							<el>Transducteurs finis et leur application en TAL.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id=" ENSINAU10">
					<nom>Modèles à évènements discrets</nom>
					<credit>3</credit>
					<refprof id="Hamri"/>
					<resumes>
						<liste>
							<el>Posséder les notions de base en modélisation et analyse de systèmes dynamiques à événements discrets et particulièrement appréhender le formalisme réseau de</el>
							<el>Pétri. Étudier la conception et la spécification des systèmes réactifs à travers l'analyse du modèle à évènements discrets (concurrence, parallélisme, synchronisation).</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>20</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
	
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id=" ENSINAU11">
					<nom>Introduction à l'apprentissage automatique </nom>
					<credit>3</credit>
					<refprof id="Kadri"/>
					<resumes>
						<liste>
							<el>Introduction aux concepts de bases : formalisme statistique, erreur de généralisation</el>
							<el>Arbres de décision : algorithme ID3, élagage, programmation</el>
							<el>Algorithme du perceptron : algorithme, temps de convergence, propriétés de généralisation, application à la classification de textes</el>
							<el>Régression logistique : cadre probabiliste, maximisation de la vraisemblance, optimisation par gradient conjugué et méthode de Newton, application à la classification de textes</el>
							<el>Quelques éléments théoriques : notion de capacité de classes de fonctions, complexité de Rademacher, borne dépendante des données.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
			</paquet_unites>
		</programme>
		<programme semestre="2">
			<paquet_unites>
				<nom>Unités obligatoires :</nom>
				<unite id="ENSINBU1">
					<nom>Anglais</nom>
					<credit>3</credit>
					<refprof id="Dal"/>
					<resumes>
						<paragraphe>Un enseignement destiné à confirmer l'utilisation de l'anglais dans le contexte de l'informatique ainsi que dans la pratique professionnelle.</paragraphe>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINBU2">
					<nom>Communication</nom>
					<credit>3</credit>
					<refprof id="Rene"/>
					<resumes>
						<chapitre>
							<titre>chapitre 1 : Théories de la communication :</titre>
							<liste>
								<el>La théorie mathématique de l’information (Shannon, Weaver), la cybernétique (Wiener)</el>
								<el>La théorie de Palo Alto ( Bateson, Watzlawick) et la théorie de la communication par les processus (Mucchielli)</el>
							</liste>
						</chapitre>
						<chapitre>
							<titre>chapitre 2 : Rôle de l’interculturalité dans le travail en équipe :</titre>
							<liste>
								<el>L’enquête interculturelle de Hofstede pour IBM</el>
								<el>La gestuelle et le paralangage et la proxémie dans le monde (Hall)</el>
							</liste>
						</chapitre>
						<chapitre>
							<titre>chapitre 3 : Notions de management et de travail collaboratif</titre>
							<liste>
								<el>Le travail collaboratif vs le travail coopératif</el>
								<el>La notion de groupes</el>
								<el>Les compétences managériales</el>
							</liste>
						</chapitre>
						<pre_requis>
							<paragraphe>Particulièrement utile pour un choix d’options, les échanges internationaux et la formation continue.</paragraphe>
						</pre_requis>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINBU3">
					<nom>Bases de données avancées</nom>
					<credit>3</credit>
					<refprof id="Omar"/>
					<resumes>
						<liste>
							<el>Transactions, concurrence</el>
							<el>Déclencheurs et exceptions</el>
							<el>Conception, Entités/Associations</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINBU4">
					<nom>XML</nom>
					<credit>3</credit>
					<refprof id="Massat"/>
					<resumes>
						<liste>
							<el>XML, DTD, XSD</el>
							<el>XPath, XSLT, XQuery</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINBU5">
					<nom>Algorithmique et recherche opérationnelle</nom>
					<credit>3</credit>
					<refprof id="Cepoi"/>
					<resumes>
						<liste>
							<el>Programmation linéaire.</el>
							<el>Notions et algorithmes de flots.</el>
							<el>Applications (couplage, affectation, transport, ...)</el>
							<el>Programmation dynamique (sac à dos, ordonnancement, ...)</el>
							<el>Algorithmes à performance garantie</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
			</paquet_unites>
			<paquet_unites>
				<nom>6 crédits à choisir :</nom>
				<unite id="ENSINBU6">
					<nom>Projet</nom>
					<credit>6</credit>
					<resumes>
						<paragraphe>Le but du projet est de mettre en oeuvre, de l'analyse à la programmation, les notions présentées en cours. C'est l'occasion, pour les étudiants, d'utiliser sur un cas pratique, les éléments exposées dans les UE. Travail effectué sous la direction pédagogique d'un enseignant, et donnant lieu à la rédaction d'un mémoire et d'une soutenance orale.</paragraphe>
					</resumes>
				</unite>
				<unite id="ENSINBU7">
					<nom>Stage de deux mois</nom>
					<credit>6</credit>
					<resumes>
						<paragraphe>Le but du stage est de mettre en oeuvre, de l'analyse à la programmation, les notions présentées en cours. C'est l'occasion, pour les étudiants, d'utiliser sur un cas pratique, les éléments exposées dans les UE. Travail effectué sous la direction pédagogique d'un enseignant, et donnant lieu à la rédaction d'un mémoire et d'une soutenance orale.</paragraphe></resumes>
				</unite>
			</paquet_unites>
			<paquet_unites>
				<nom>9 crédits à choisir :</nom>
				<unite id="ENSINBU8">
					<nom>Sémantique</nom>
					<credit>3</credit>
					<refprof id="Siegel"/>
					<resumes>
						<liste>
							<el>1-Le lambda-calcul simplement typé.</el>
							<el>Syntaxe, typage, beta et eta-conversions, équations. Modèles : interprétation des jugements de typage.</el>
							<el>2-Extension à PCF. La règle \mu.</el>
							<el>3-Points fixes dans les ordres partiels complets. Le théorème de Tarski.</el>
							<el>4-Sémantique par point fixe de PCF.</el>
							<el>5-Cours de clôture : survol des différentes approches sémantiques.</el>
							<el>Sémantiques opérationnelles : par transitions, naturelles, machine abstraite de Landin.</el>
							<el>Sémantique dénotationnelles : cas fonctionnel(cf.chapitre 4) et cas d'un petit langage impératif.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
					<lieu>
						<campus>Luminy</campus>
					</lieu>
				</unite>
				<unite id="ENSINBU9">
					<nom>Algorithmique distribuée</nom>
					<credit>3</credit>
					<refprof id="Das"/>
					<resumes>
						<paragraphe>Un système distribué est un ensemble d’entités autonomes de calcul (ordinateurs, PDA, processeurs, processus, processus léger, ...) interconnectées et qui peuvent communiquer entre eux. Ce cours est une introduction aux méthodes pour la conception d'algorithmes dans de tels systèmes. Il donne une présentation des différents types de systèmes distribués et des différents problèmes que l'on doit résoudre. Les problèmes abordés sont : l'élection, le consensus, la diffusion, l'exploration, la réplication, l'exploration et le rendez-vous avec des agent mobiles.</paragraphe>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
				</unite>
				<unite id="ENSINBU10">
					<nom>Intégration des systèmes d'information</nom>
					<credit>3</credit>
					<resumes>
						<liste>
							<el>Problématique d'intégration des SI</el>
							<el>Architectures et patrons d'intégration</el>
							<el>Systèmes d'Information d'entreprises</el>
							<el>Systèmes d'Information sur Internet</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
				</unite>
				<unite id=" ENSINBU11">
					<nom>Implémentation et optimisation des bases de données</nom>
					<credit>3</credit>
					<refprof id="Noel"/>
					<resumes>
						<paragraphe>Actuellement, de plus en plus de données sont conservées sans être réellement exploitées. Elles représentent pourtant une source importante d’information. La fouille de données peut-être définie comme le processus permettant d’extraire de l’information non triviale et non préalablement connue à partir des données. Dans cet enseignement, nous nous focaliserons sur l’extraction de corrélations entre les données (règle d’association, Dépendances Fonctionnelles...) et nous verrons des techniques de mesure de la qualité des données (détection et correction d’erreur).</paragraphe>
						<paragraphe>Par ailleurs, nous passerons du côté obscur des SGBD en mettant évidence le lien existant entre les performances d'un SGBD et les choix d'implémentation des différents algorithmes utilisés (gestion de la concurrence, reprise sur panne, transaction...) ainsi que les différentes implémentations existantes des opérations de base des SGBD comme les jointures ou les tris accompagnés de leurs conditions d'utilisation.</paragraphe>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
				</unite>
				<unite id="ENSINBU12">
					<nom>Intelligence artificielle</nom>
					<credit>3</credit>
					<resumes>
						<liste>
							<el>Introduction à l'IA</el>
							<el>Problèmes d'espace d'états et d'exploration</el>
							<el>Logiques pour l'IA et démonstration automatique</el>
							<el>Représentation de connaissances</el>
							<el>Actions, temps et planification</el>
							<el>Programmation par contraintes et réseaux de contraintes
							</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
				</unite>
				<unite id=" ENSINBU13">
					<nom>Algorithme à performance garantie </nom>
					<credit>3</credit>
					<refprof id="Couetoux"/>
					<resumes>
						<liste>
							<el>Algorithmes d'approximation de nature combinatoire pour les problèmes</el>
						</liste>
						<paragraphe>NP-complets suivants : Voyageur de Commerce, arbre de Steiner, ordonnancement de taches, clustering, p-centres, sac à dos, bin packing, couverture d'ensemble, la plus courte sur-séquence commune ;</paragraphe>
						<liste>
							<el>FPTAS et PTAS (ordonnancement de taches et sac à dos) ; </el>
							<el>Algorithmes d'approximation par programmation linéaire : l'arrondi et la méthode primale-duale (MAXSAT, couverture d'ensemble, multicoupes et multiflots dans les arbres) ;</el>
							<el>Algorithmes en ligne et compétitivité : la pagination et les k-serveurs.</el>
						</liste>
					</resumes>
					<plan>
						<nom>Cours</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TD</nom>
						<nb_h>10</nb_h>
					</plan>
					<plan>
						<nom>TP</nom>
						<nb_h>10</nb_h>
					</plan>
				</unite>
			</paquet_unites>
		</programme>
		<politique_des_stages>
			<paragraphe>La formation par le biais des projets est largement encouragée : un travail d'étude et de recherche réalisé en groupe de deux à trois étudiants termine la première année. C'est l'occasion de mettre en pratique les connaissances acquises durant la formation. Les stages sont optionnels en première année (2 mois). Ils se déroulent en entreprise ou dans un laboratoire suivant la spécialité.</paragraphe>
			<paragraphe>La recherche de stage est assurée par l'étudiant avec l'aide de l'équipe pédagogique (liste d'entreprises, diffusion des offres reçues, etc.). Le sujet de stage est validé par un enseignant responsable avant la signature de la convention. La fin du stage donne lieu à une soutenance et à la rédaction d'un mémoire.</paragraphe>
		</politique_des_stages>
		<aspects_formation>
			<paragraphe>En premier lieu, la formation au niveau M1 est caractérisée par un ensemble de cours fondamentaux qui préparent aux spécialités recherche et professionnelles. Ensuite, grâce aux UE optionnelles, les étudiants peuvent choisir des cours plutôt à vocation recherche. Enfin, l'UE projet ou stage peut être dédiée complètement à la recherche : stage dans un laboratoire, ou projet à vocation recherche.</paragraphe>
		</aspects_formation>
		<modalites_pedagogiques>
			<paragraphe>La première année du master est un tronc commun unique qui n'est pas constitué de parcours. Le premier semestre est composé de 5 unités obligatoires (3 UE à 6 crédits et 2 UE à 3 crédits) et 2 unités optionnelles de 3 crédits. Le deuxième semestre est composé de trois unités obligatoires (pour 15 crédits), de 3 unités optionnelles de 3 crédits et d'un stage ou d'un travail encadré (6 crédits).</paragraphe>
		</modalites_pedagogiques>
		<conditions_admission>
			<pre_requis>
				<paragraphe>Une licence à dominante informatique.</paragraphe>
			</pre_requis>
			<lien link="http://masterinfo.univ-mrs.fr/candidature/">Déposer une candidature pour 2014/2015.</lien>
		</conditions_admission>
	</parcours>
</master>